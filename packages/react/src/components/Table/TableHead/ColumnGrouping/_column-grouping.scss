/**
  This mixin is used to switch the position of the two header rows 
  ("column row" and "group row") and adjust the heights and positions for
  all the different table sizes. Since Safari doesn't support position: relative;
  on 'tr' elements we have to manage the repositioning on the 'th' level. 
**/
@mixin adjustPositionsAndHeights($group-height, $col-height) {
  .#{$iot-prefix}--table-head--with-column-groups {
    // Move column row down to the position of the group row
    .#{$iot-prefix}--table-header__column-row {
      th {
        position: relative;
        top: $group-height;
        // Height is needed for FF & Safari
        height: $col-height;
      }

      // cells with span-group-row are columns that don't belong to a group
      // and span both the column row and the group row.
      th.#{$iot-prefix}--table-header--span-group-row {
        top: 0;
        button.#{$iot-prefix}--table-head--table-header,
        a.#{$iot-prefix}--table-head--table-header {
          padding-top: $group-height;
          // Height is needed for FF & Safari
          height: calc(#{$group-height} + #{$col-height});
          // Undo 'fix' added to sort button in teable-head.scss
          &:focus button.#{$iot-prefix}--table-head--overflow:hover {
            margin-top: auto;
            margin-bottom: auto;
          }
        }
      }
    }
    // Move group row up to the position of the column row
    .#{$iot-prefix}--table-header__group-row {
      th {
        position: relative;
        top: calc(#{$col-height} * -1);
      }
    }

    &.lightweight {
      // lightweight adds extra 2 borders at top and bottom
      $extra-borders-width: calc(2px * 2);
      // Subtract width for extra borders from the overflow button height.
      .#{$iot-prefix}--table-head--overflow {
        max-height: calc(#{$col-height} - #{$extra-borders-width}) !important;
      }
      // Subtract width for extra borders from the table headers
      th.#{$iot-prefix}--table-header--span-group-row {
        button.#{$iot-prefix}--table-head--table-header,
        a.#{$iot-prefix}--table-head--table-header {
          height: calc(calc(#{$group-height} + #{$col-height}) - #{$extra-borders-width});
        }
      }
    }
  }
}

// SET BORDERS
// We need the bx--data-table selector in order to override some Carbon styles
.#{$prefix}--data-table {
  .#{$iot-prefix}--table-head--with-column-groups {
    $border-width: 2px;

    // Basic border styling to simplyfy further border modifications
    // using color or width only.
    th {
      border-color: $ui-02;
      border-style: solid;
      border-width: 0;
    }

    // THE ROW OF COLUMN HEADERS
    .#{$iot-prefix}--table-header__column-row {
      th {
        // Add left border width to the "real" columns (i.e. not to nesting/muli select etc)
        &.#{$iot-prefix}--table-head--table-header {
          border-left-width: $border-width;
        }
        // But first columm should never get a left border.
        &:first-of-type {
          border-left-width: 0;
          // But again, the first column is a "real" column it should get a right border
          // bacause we can't put a left border on the first group row column
          // since the colspan makes it in possible to tell when a group row column is the
          // first visual column.
          &.#{$iot-prefix}--table-header--span-group-row {
            border-right-width: $border-width;
            // We need to compensate the next sibling by removing that left border
            // or else we end up with double borders.
            & + .#{$iot-prefix}--table-head--table-header {
              border-left-width: 0;
            }
          }
        }
      }

      // Add border width to the first column that appears after the
      // "real" columns which can be either row action or expander but not both.
      .#{$iot-prefix}--table-header-expander-column,
      .#{$iot-prefix}--table-header-row-action-column {
        border-left-width: $border-width;
      }
      .#{$iot-prefix}--table-header-expander-column
        ~ .#{$iot-prefix}--table-header-row-action-column {
        border-left-width: 0;
      }

      // Fix for multisort/overflow button that exceeded its container
      // possibly move this fix to always be active, not just for column grouping.
      .#{$iot-prefix}--table-head--table-header--with-overflow {
        .#{$prefix}--table-header-label {
          padding-bottom: 0;
          padding-top: 0;
        }
      }
    }

    // THE ROW OF THE GROUPS
    .#{$iot-prefix}--table-header__group-row {
      th {
        border-left-width: $border-width;
        &:first-of-type {
          &.#{$iot-prefix}--table-header__group-row-spacer,
          &.#{$iot-prefix}--table-header__column-group {
            border-left-width: 0;
          }
        }
        &.#{$iot-prefix}--table-header__column-group {
          text-align: center;
          border-bottom-width: $border-width;
          span {
            display: block;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
          }
        }
      }
    }

    // LIGHTWEIGHT STYLING
    &.lightweight {
      th {
        border-color: $interactive-02;
        // Override Carbon bottom border
        &.#{$iot-prefix}--table-header__group-row-spacer {
          border-bottom: none;
        }
      }
      // Top line
      .#{$iot-prefix}--table-header__group-row th,
      .#{$iot-prefix}--table-header--span-group-row {
        border-top-width: $border-width;
      }
      // Bottom line
      .#{$iot-prefix}--table-header__column-row th {
        border-bottom-width: $border-width;
      }
    }

    // RTL STYLING
    [dir='rtl'] & {
      // Revert the flow of borders for start of the table
      th {
        // Add right border width to the "real" columns (i.e. not to nesting/muli select etc)
        // remove the left border from ltr dir
        &.#{$iot-prefix}--table-head--table-header {
          border-right-width: $border-width;
          border-left-width: 0;
        }
        // But first columm should never get a right border.
        &:first-of-type {
          border-right-width: 0;
          // But again, the first column is a "real" column it should now get a left border
          // bacause we can't put a right border on the first group row column
          // since the colspan makes it in possible to tell when a group row column is the
          // first visual column.
          &.#{$iot-prefix}--table-header--span-group-row {
            border-left-width: $border-width;
            // We need to compensate the next sibling by removing that right border
            // or else we end up with double borders.
            & + .#{$iot-prefix}--table-head--table-header {
              border-right-width: 0;
            }
          }
        }
      }

      // Add right side border width to the first column that appears after the
      // normal columns (which can be either row action or expander).
      .#{$iot-prefix}--table-header-expander-column,
      .#{$iot-prefix}--table-header-row-action-column {
        border-right-width: $border-width;
        border-left-width: 0;
      }
      .#{$iot-prefix}--table-header-expander-column
        ~ .#{$iot-prefix}--table-header-row-action-column {
        border-right-width: 0;
      }

      .#{$iot-prefix}--table-header__group-row th:not(:first-of-type) {
        border-right-width: $border-width;
        border-left-width: 0;
      }
    }
  }

  // ADJUST FOR DIFFERENT TABLE ROW SIZES
  // Default size is lg
  @include adjustPositionsAndHeights($spacing-09, $spacing-09);
  &--xl {
    @include adjustPositionsAndHeights($spacing-10, $spacing-10);
  }
  &--md {
    @include adjustPositionsAndHeights($spacing-08, $spacing-09);
  }
  &--sm {
    .#{$iot-prefix}--table-head--with-column-groups {
      .#{$prefix}--table-header-label {
        padding-bottom: 0;
        padding-top: 0;
      }
    }
    @include adjustPositionsAndHeights($spacing-07, $spacing-09);
  }
  &--xs {
    .#{$iot-prefix}--table-head--with-column-groups {
      .#{$prefix}--table-header-label {
        padding-bottom: 0;
        padding-top: 0;
      }
    }
    @include adjustPositionsAndHeights($spacing-06, $spacing-09);
  }
}
